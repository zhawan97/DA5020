mutate(county_code = c("AL", "AG", "NY", "BM", "CA", "CY", "CH", "CM",
"CN", "CL", "CO", "CR", "DE", "DU", "ER", "ES",
"FR", "FU", "GE", "GR", "HE", "JE", "NY", "LE",
"LI", "MA", "MO", "MG", "NA", "NY", "NI", "ON",
"OD", "OT", "OR", "OL", "OS", "OG", "PU", "NY",
"RE", "NY", "RO", "SL", "SA", "SC", "SH", "SY",
"SE", "ST", "SU", "SV", "TI", "TO", "UL", "WR",
"WS", "WA","WE", "WY", "YA")) |>
relocate(county_code, .before = county_name)
program_category <- admissions_df |>
select(program_category) |>
distinct()|>
mutate(program_code = str_extract(program_category, "^[A-Z][a-z]{1}"),
program_code = toupper(program_code)) |>
relocate(program_code, .before = program_category)
primary_substance_group <- admissions_df |>
select(primary_substance_group) |>
distinct() |>
mutate(substance_code = str_extract(primary_substance_group, "^[A-Z]")) |>
relocate(substance_code, .before = primary_substance_group)
admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
select(!c(county_of_program_location, program_category, primary_substance_group))
admissions_df |>
mutate(if_else(program_category %in% program_category$program_category, program_category = program_category$program_code, "-"))
library(ggplot2)
library(tidyverse)
library(XML)
# Adding URL to a variable
file_url <- "http://data.ny.gov/api/views/ngbt-9rwf/rows.xml"
# Downloading file to admissions.xml
download.file(file_url, destfile = "admissions.xml")
# Parsing XML file
xmlfile <- xmlParse("admissions.xml")
# Getting root of XML file
xmltop <- xmlRoot(xmlfile)
# Accessing the first element of the root into a dataframe
admissions_df <- xmlToDataFrame(xmltop[[1]])
View(admissions_df)
# ADMISSIONS ANALYSIS
admissions_sd <- sd(admissions_df$admissions)
admissions_mean <- mean(admissions_df$admissions)
admissions_median <- median(admissions_df$admissions)
admissions_var <- sqrt(admissions_sd)
# Assign z-scores
admissions_df$admissions_z <- abs((admissions_mean - admissions_df$admissions)/admissions_sd)
# ADMISSIONS ANALYSIS
admissions_sd <- sd(admissions_df$admissions, na.rm = TRUE)
admissions_mean <- mean(admissions_df$admissions, na.rm = TRUE)
admissions_median <- median(admissions_df$admissions, na.rm = TRUE)
admissions_var <- sqrt(admissions_sd)
# Assign z-scores
admissions_df$admissions_z <- abs((admissions_mean - admissions_df$admissions)/admissions_sd)
?mean
mean(admissions_df$admissions)
# Changing to correct data type
admissions_df <- admissions_df |>
mutate(year = as.numeric(year),
county_of_program_location = as.factor(county_of_program_location),
program_category = as.factor(program_category),
service_type = as.factor(service_type),
age_group = as.factor(age_group),
admissions = as.numeric(admissions)
)
# ADMISSIONS ANALYSIS
admissions_sd <- sd(admissions_df$admissions, na.rm = TRUE)
admissions_mean <- mean(admissions_df$admissions, na.rm = TRUE)
admissions_median <- median(admissions_df$admissions, na.rm = TRUE)
admissions_var <- sqrt(admissions_sd)
# Assign z-scores
admissions_df$admissions_z <- abs((admissions_mean - admissions_df$admissions)/admissions_sd)
admissions_outliers <- admissions_df %>%
filter(admissions_z > 1.5)
num_outliers <- as.character(length(admissions_outliers))
cat("There are ", num_outliers, " outliers in the data set \nAn outlier is defined as a value having a z-score greater than 1.5 \n\n")
admissions_outliers
which(admissions_df$admissions_z > 1.5)
length(admissions_outliers)
?length
# ADMISSIONS ANALYSIS
admissions_sd <- sd(admissions_df$admissions, na.rm = TRUE)
admissions_mean <- mean(admissions_df$admissions, na.rm = TRUE)
admissions_median <- median(admissions_df$admissions, na.rm = TRUE)
admissions_var <- sqrt(admissions_sd)
# Assign z-scores
admissions_df$admissions_z <- abs((admissions_mean - admissions_df$admissions)/admissions_sd)
admissions_outliers <- admissions_df %>%
filter(admissions_z > 1.5)
num_outliers <- as.character(length(admissions_outliers))
cat("There are ", num_outliers, " outliers in the data set \nAn outlier is defined as a value having a z-score greater than 1.5 \n\n")
admissions_outliers
admissions_outliers
length(admissions_outliers)
county <- admissions_df |>
select(county_of_program_location) |>
rename(county_name = county_of_program_location) |>
distinct() |>
mutate(county_code = c("AL", "AG", "NY", "BM", "CA", "CY", "CH", "CM",
"CN", "CL", "CO", "CR", "DE", "DU", "ER", "ES",
"FR", "FU", "GE", "GR", "HE", "JE", "NY", "LE",
"LI", "MA", "MO", "MG", "NA", "NY", "NI", "ON",
"OD", "OT", "OR", "OL", "OS", "OG", "PU", "NY",
"RE", "NY", "RO", "SL", "SA", "SC", "SH", "SY",
"SE", "ST", "SU", "SV", "TI", "TO", "UL", "WR",
"WS", "WA","WE", "WY", "YA")) |>
relocate(county_code, .before = county_name)
county
?distinct
program_category <- admissions_df |>
select(program_category) |>
distinct()|>
mutate(program_code = str_extract(program_category, "^[A-Z][a-z]{1}"),
program_code = toupper(program_code)) |>
relocate(program_code, .before = program_category)
primary_substance_group <- admissions_df |>
select(primary_substance_group) |>
distinct() |>
mutate(substance_code = str_extract(primary_substance_group, "^[A-Z]")) |>
relocate(substance_code, .before = primary_substance_group)
View(primary_substance_group)
admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
select(!c(county_of_program_location, program_category, primary_substance_group))
admissions_df |>
mutate(if_else(program_category %in% program_category$program_category, program_category = program_category$program_code, "-"))
admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
select(!c(county_of_program_location, program_category, primary_substance_group))
#admissions_df |>
#  mutate(if_else(program_category %in% program_category$program_category, program_category = program_category$program_code, "-"))
View(admissions_data)
?if_else
View(program_category)
# COUNTY ANALYSIS
admissions_by_county <- admissions_df %>%
group_by(county_of_program_location) %>%
select(county_of_program_location, admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_by_county %>%
count(county_of_program_location, wt = admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_county_plot <- ggplot(admissions_by_county, aes(x = county_of_program_location, y = admissions)) + geom_bar(stat = "identity") + labs(x = "County", y = "Admissions", title = "Admissions By County") + facet_wrap(~ county_of_program_location, ncol = 10)
# AGE GROUP ANALYSIS
admissions_by_age <- admissions_df %>%
group_by(age_group) %>%
select(age_group,admissions) %>%
arrange(age_group, .locale = "en")
admissions_by_age %>%
count(age_group) %>%
arrange(age_group, .locale = "en")
admissions_age_plot <- ggplot(admissions_by_age, aes(x = age_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Age Group", y = "Admssions", title = "Admissions By Age Group")
# PROGRAM CATEGORY ANALYSIS
admissions_by_program <- admissions_df %>%
group_by(program_category) %>%
select(program_category, admissions) %>%
arrange(program_category, .locale = "en")
admissions_by_program %>%
count(program_category, wt = admissions) %>%
arrange(program_category, .locale = "en")
admissions_program_plot <- ggplot(admissions_by_program, aes(x = program_category, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Program Category", y = "Admissions", title = "Admissions by Program")
# PRIMARY SUBSTANCE ANALYSIS
admissions_by_substance <- admissions_df %>%
group_by(primary_substance_group) %>%
select(primary_substance_group,admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_by_substance %>%
count(primary_substance_group, wt = admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_substance_plot <- ggplot(admissions_by_substance, aes(x = primary_substance_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Primary Substance", y = "Admssions", title = "Admissions By Substance")
# COUNTY ANALYSIS
admissions_by_county <- admissions_df %>%
group_by(county_of_program_location) %>%
select(county_of_program_location, admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_by_county %>%
count(county_of_program_location, wt = admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_county_plot <- ggplot(admissions_by_county, aes(x = county_of_program_location, y = admissions)) + geom_bar(stat = "identity") + labs(x = "County", y = "Admissions", title = "Admissions By County") + facet_wrap(~ county_of_program_location, ncol = 10)
# AGE GROUP ANALYSIS
admissions_by_age <- admissions_df %>%
group_by(age_group) %>%
select(age_group,admissions) %>%
arrange(age_group, .locale = "en")
admissions_by_age %>%
count(age_group) %>%
arrange(age_group, .locale = "en")
admissions_age_plot <- ggplot(admissions_by_age, aes(x = age_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Age Group", y = "Admssions", title = "Admissions By Age Group")
# PROGRAM CATEGORY ANALYSIS
admissions_by_program <- admissions_df %>%
group_by(program_category) %>%
select(program_category, admissions) %>%
arrange(program_category, .locale = "en")
admissions_by_program %>%
count(program_category, wt = admissions) %>%
arrange(program_category, .locale = "en")
admissions_program_plot <- ggplot(admissions_by_program, aes(x = program_category, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Program Category", y = "Admissions", title = "Admissions by Program")
# PRIMARY SUBSTANCE ANALYSIS
admissions_by_substance <- admissions_df %>%
group_by(primary_substance_group) %>%
select(primary_substance_group,admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_by_substance %>%
count(primary_substance_group, wt = admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_substance_plot <- ggplot(admissions_by_substance, aes(x = primary_substance_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Primary Substance", y = "Admssions", title = "Admissions By Substance")
admissions_age_plot
admissions_county_plot
admissions_program_plot
admissions_county_plot
# COUNTY ANALYSIS
admissions_by_county <- admissions_df %>%
group_by(county_of_program_location) %>%
select(county_of_program_location, admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_by_county %>%
count(county_of_program_location, wt = admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_county_plot <- ggplot(admissions_by_county, aes(x = county_of_program_location, y = admissions)) + geom_bar(stat = "identity") + labs(x = "County", y = "Admissions", title = "Admissions By County") + facet_wrap(~ county_of_program_location, ncol = 10)
# AGE GROUP ANALYSIS
admissions_by_age <- admissions_df %>%
group_by(age_group) %>%
select(age_group,admissions) %>%
arrange(age_group, .locale = "en")
admissions_by_age %>%
count(age_group) %>%
arrange(age_group, .locale = "en")
admissions_age_plot <- ggplot(admissions_by_age, aes(x = age_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Age Group", y = "Admssions", title = "Admissions By Age Group")
# PROGRAM CATEGORY ANALYSIS
admissions_by_program <- admissions_df %>%
group_by(program_category) %>%
select(program_category, admissions) %>%
arrange(program_category, .locale = "en")
admissions_by_program %>%
count(program_category, wt = admissions) %>%
arrange(program_category, .locale = "en")
admissions_program_plot <- ggplot(admissions_by_program, aes(x = program_category, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Program Category", y = "Admissions", title = "Admissions by Program")
# PRIMARY SUBSTANCE ANALYSIS
admissions_by_substance <- admissions_df %>%
group_by(primary_substance_group) %>%
select(primary_substance_group,admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_by_substance %>%
count(primary_substance_group, wt = admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_substance_plot <- ggplot(admissions_by_substance, aes(x = primary_substance_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Primary Substance", y = "Admssions", title = "Admissions By Substance")
admissions_age_plot
admissions_county_plot
admissions_program_plot
admissions_county_plot
# COUNTY ANALYSIS
admissions_by_county <- admissions_df %>%
group_by(county_of_program_location) %>%
select(county_of_program_location, admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_by_county %>%
count(county_of_program_location, wt = admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_county_plot <- ggplot(admissions_by_county, aes(x = county_of_program_location, y = admissions)) + geom_bar(stat = "identity") + labs(x = "County", y = "Admissions", title = "Admissions By County") + facet_wrap(~ county_of_program_location, ncol = 5)
# AGE GROUP ANALYSIS
admissions_by_age <- admissions_df %>%
group_by(age_group) %>%
select(age_group,admissions) %>%
arrange(age_group, .locale = "en")
admissions_by_age %>%
count(age_group) %>%
arrange(age_group, .locale = "en")
admissions_age_plot <- ggplot(admissions_by_age, aes(x = age_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Age Group", y = "Admssions", title = "Admissions By Age Group")
# PROGRAM CATEGORY ANALYSIS
admissions_by_program <- admissions_df %>%
group_by(program_category) %>%
select(program_category, admissions) %>%
arrange(program_category, .locale = "en")
admissions_by_program %>%
count(program_category, wt = admissions) %>%
arrange(program_category, .locale = "en")
admissions_program_plot <- ggplot(admissions_by_program, aes(x = program_category, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Program Category", y = "Admissions", title = "Admissions by Program")
# PRIMARY SUBSTANCE ANALYSIS
admissions_by_substance <- admissions_df %>%
group_by(primary_substance_group) %>%
select(primary_substance_group,admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_by_substance %>%
count(primary_substance_group, wt = admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_substance_plot <- ggplot(admissions_by_substance, aes(x = primary_substance_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Primary Substance", y = "Admssions", title = "Admissions By Substance")
admissions_age_plot
admissions_county_plot
admissions_county_plot
admissions_program_plot
admissions_county_plot
admissions_county_plot <- ggplot(admissions_by_county, aes(x = county_of_program_location, y = admissions)) + geom_bar(stat = "identity") + labs(x = "County", y = "Admissions", title = "Admissions By County") + facet_wrap(~ county_of_program_location, ncol = 50)
admissions_county_plot
admissions_county_plot <- ggplot(admissions_by_county, aes(x = county_of_program_location, y = admissions)) + geom_bar(stat = "identity") + labs(x = "County", y = "Admissions", title = "Admissions By County")
admissions_county_plot
admissions_county_plot <- ggplot(admissions_by_county, aes(x = county_of_program_location, y = admissions)) + geom_bar(stat = "identity") + labs(x = "County", y = "Admissions", title = "Admissions By County") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
admissions_county_plot
str(admissions_df)
# Changing to correct data type
admissions_df <- admissions_df |>
mutate(year = as.numeric(year),
county_of_program_location = as.factor(county_of_program_location),
program_category = as.factor(program_category),
service_type = as.factor(service_type),
age_group = as.factor(age_group),
admissions = as.numeric(admissions)
)
summary(admissions_df)
county <- admissions_df |>
select(county_of_program_location) |>
rename(county_name = county_of_program_location) |>
distinct() |>
mutate(county_code = c("AL", "AG", "NY", "BM", "CA", "CY", "CH", "CM",
"CN", "CL", "CO", "CR", "DE", "DU", "ER", "ES",
"FR", "FU", "GE", "GR", "HE", "JE", "NY", "LE",
"LI", "MA", "MO", "MG", "NA", "NY", "NI", "ON",
"OD", "OT", "OR", "OL", "OS", "OG", "PU", "NY",
"RE", "NY", "RO", "SL", "SA", "SC", "SH", "SY",
"SE", "ST", "SU", "SV", "TI", "TO", "UL", "WR",
"WS", "WA","WE", "WY", "YA")) |>
relocate(county_code, .before = county_name)
program_category <- admissions_df |>
select(program_category) |>
distinct()|>
mutate(program_code = str_extract(program_category, "^[A-Z][a-z]{1}"),
program_code = toupper(program_code)) |>
relocate(program_code, .before = program_category)
primary_substance_group <- admissions_df |>
select(primary_substance_group) |>
distinct() |>
mutate(substance_code = str_extract(primary_substance_group, "^[A-Z]")) |>
relocate(substance_code, .before = primary_substance_group)
admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
select(!c(county_of_program_location, program_category, primary_substance_group))
admissions_df |>
mutate(if_else(program_category %in% program_category$program_category, program_category = program_category$program_code, "-"))
?match
#admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
#  select(!c(county_of_program_location, program_category, primary_substance_group,admissions_z))
admissions_data <- admissions_df
#admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
#  select(!c(county_of_program_location, program_category, primary_substance_group,admissions_z))
admissions_data <- admissions_df
admissions_data$county_of_program_location[match(county$county_name, admissions_data$county_of_program_location)] <- county$county_code
View(county)
county <- admissions_df |>
select(county_of_program_location) |>
distinct() |>
mutate(county_code = c("AL", "AG", "NY", "BM", "CA", "CY", "CH", "CM",
"CN", "CL", "CO", "CR", "DE", "DU", "ER", "ES",
"FR", "FU", "GE", "GR", "HE", "JE", "NY", "LE",
"LI", "MA", "MO", "MG", "NA", "NY", "NI", "ON",
"OD", "OT", "OR", "OL", "OS", "OG", "PU", "NY",
"RE", "NY", "RO", "SL", "SA", "SC", "SH", "SY",
"SE", "ST", "SU", "SV", "TI", "TO", "UL", "WR",
"WS", "WA","WE", "WY", "YA")) |>
relocate(county_code, .before = county_name)
county <- admissions_df |>
select(county_of_program_location) |>
distinct() |>
mutate(county_code = c("AL", "AG", "NY", "BM", "CA", "CY", "CH", "CM",
"CN", "CL", "CO", "CR", "DE", "DU", "ER", "ES",
"FR", "FU", "GE", "GR", "HE", "JE", "NY", "LE",
"LI", "MA", "MO", "MG", "NA", "NY", "NI", "ON",
"OD", "OT", "OR", "OL", "OS", "OG", "PU", "NY",
"RE", "NY", "RO", "SL", "SA", "SC", "SH", "SY",
"SE", "ST", "SU", "SV", "TI", "TO", "UL", "WR",
"WS", "WA","WE", "WY", "YA")) |>
relocate(county_code, .before = county_of_program_location)
#admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
#  select(!c(county_of_program_location, program_category, primary_substance_group,admissions_z))
admissions_data <- admissions_df
admissions_data$county_of_program_location[match(county$county_name, admissions_data$county_of_program_location)] <- county$county_code
admissions_data <- merge(admissions_data, county, by = "county_of_program_location")
#admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
#  select(!c(county_of_program_location, program_category, primary_substance_group,admissions_z))
admissions_data <- admissions_df
admissions_data$county_of_program_location <- replace(admissions_data$county_of_program_location, admissions_data$county_of_program_location %in% county$county_of_program_location, county$county_code[match(admissions_data$county_of_program_location,county$county_of_program_location)])
#admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
#  select(!c(county_of_program_location, program_category, primary_substance_group,admissions_z))
admissions_data <- admissions_df
admissions_data <- admissions_data %>%
mutate(county_of_program_location = ifelse(county_of_program_location %in% county$county_of_program_location, county$county_code[match(county_of_program_location, county$county_of_program_location)], county_of_program_location))
#admissions_data <- admissions_df |> # Is this the correct way to select them or I could just mutate the columns with the other df
#  select(!c(county_of_program_location, program_category, primary_substance_group,admissions_z))
admissions_data <- admissions_df
admissions_data <- admissions_data %>%
mutate(county_of_program_location = ifelse(county_of_program_location %in% county$county_of_program_location, county$county_code[match(county_of_program_location, county$county_of_program_location)], county_of_program_location))
View(program_category)
program_category_df <- admissions_df |>
select(program_category) |>
distinct()|>
mutate(program_code = str_extract(program_category, "^[A-Z][a-z]{1}"),
program_code = toupper(program_code)) |>
relocate(program_code, .before = program_category)
# Create admissions_data df as a copy of admissions_df
admissions_data <- admissions_df
#Replace values in county_of_program_location with county codes from county df
admissions_data <- admissions_data %>%
mutate(county_of_program_location = ifelse(county_of_program_location %in% county$county_of_program_location, county$county_code[match(county_of_program_location, county$county_of_program_location)], county_of_program_location))
admissions_data <- admissions_data %>%
mutate(program_category = ifelse(program_category %in% program_category_df$program_category, program_category_df$program_code[match(program_category, program_category_df$program_category)], program_category))
# Create admissions_data df as a copy of admissions_df
admissions_data <- admissions_df
#Replace values in county_of_program_location with county codes from county df
admissions_data <- admissions_data %>%
mutate(county_of_program_location = ifelse(county_of_program_location %in% county$county_of_program_location, county$county_code[match(county_of_program_location, county$county_of_program_location)], county_of_program_location))
admissions_data <- admissions_data %>%
mutate(program_category = ifelse(program_category %in% program_category_df$program_category, program_category_df$program_code[match(program_category, program_category_df$program_category)], program_category))
admissions_data <- admissions_data %>%
mutate(program_category = ifelse(program_category %in% program_category_df$program_category, program_category_df$program_code[match(program_category, program_category_df$program_category)], program_category))
View(admissions_data)
View(primary_substance_group)
primary_substance_group_df <- admissions_df |>
select(primary_substance_group) |>
distinct() |>
mutate(substance_code = str_extract(primary_substance_group, "^[A-Z]")) |>
relocate(substance_code, .before = primary_substance_group)
# Create admissions_data df as a copy of admissions_df
admissions_data <- admissions_df
# Replace values in county_of_program_location with county codes from county df
admissions_data <- admissions_data %>%
mutate(county_of_program_location = ifelse(county_of_program_location %in% county$county_of_program_location, county$county_code[match(county_of_program_location, county$county_of_program_location)], county_of_program_location))
# Replace values in program_category with program codes from program_category_df
admissions_data <- admissions_data %>%
mutate(program_category = ifelse(program_category %in% program_category_df$program_category, program_category_df$program_code[match(program_category, program_category_df$program_category)], program_category))
# Replace values in primary_substance_group with substance codes from primary_substance_group_df
admissions_data <- admissions_data %>%
mutate(primary_substance_group = ifesle(primary_substance_group %in% primary_substance_group_df$primary_substance_group, primary_substance_group_df$substance_code[match(primary_substance_group, primary_substance_group_df$primary_substance_group)], primary_substance_group))
View(admissions_data)
# Create admissions_data df as a copy of admissions_df
admissions_data <- admissions_df
# Replace values in county_of_program_location with county codes from county df
admissions_data <- admissions_data %>%
mutate(county_of_program_location = ifelse(county_of_program_location %in% county$county_of_program_location, county$county_code[match(county_of_program_location, county$county_of_program_location)], county_of_program_location))
# Replace values in program_category with program codes from program_category_df
admissions_data <- admissions_data %>%
mutate(program_category = ifelse(program_category %in% program_category_df$program_category, program_category_df$program_code[match(program_category, program_category_df$program_category)], program_category))
# Replace values in primary_substance_group with substance codes from primary_substance_group_df
admissions_data <- admissions_data %>%
mutate(primary_substance_group = ifelse(primary_substance_group %in% primary_substance_group_df$primary_substance_group, primary_substance_group_df$substance_code[match(primary_substance_group, primary_substance_group_df$primary_substance_group)], primary_substance_group))
View(admissions_data)
annualAdmissions <- function() {
admissions_df |>  # Maybe I'll have to change it to admissions_data ------------------------
group_by(year) |>
summarise(admissions_per_year = n()) |>
ggplot(aes(year, admissions_per_year)) + geom_line() +
geom_text(x = 2020.5, y = 6900, label = "Max \n(year 2019)", color = "grey40") +
geom_vline(xintercept = 2019, color = "grey40", linetype = 2) +
annotate("curve", x = 2020.5, y = 6930, xend = 2019.2, yend = 6960,
arrow = arrow(length = unit(0.2, "cm"), type = "closed"), color = "grey40") +
labs(title = "Line chart of admissions per year", x = "Year", y = "Number of Admissions",
caption = "Visualization of admissions per year")
}
# Getting total number of admissions
total_admissions <- sum(admissions_df$admissions)
admissions_df |>
group_by(county_of_program_location) |>
summarise(admissions_per_county = n()) |>
mutate(admissions_percentage = (admissions_per_county / total_admissions) * 100) |>
ggplot(aes(county_of_program_location ,admissions_percentage)) + geom_col() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
annualAdmissions()
# Create admissions_data df as a copy of admissions_df
admissions_data <- admissions_df
admissions_data <- admissions_data %>%
select(!admissions_z)
# Replace values in county_of_program_location with county codes from county df
admissions_data <- admissions_data %>%
mutate(county_of_program_location = ifelse(county_of_program_location %in% county$county_of_program_location, county$county_code[match(county_of_program_location, county$county_of_program_location)], county_of_program_location))
# Replace values in program_category with program codes from program_category_df
admissions_data <- admissions_data %>%
mutate(program_category = ifelse(program_category %in% program_category_df$program_category, program_category_df$program_code[match(program_category, program_category_df$program_category)], program_category))
# Replace values in primary_substance_group with substance codes from primary_substance_group_df
admissions_data <- admissions_data %>%
mutate(primary_substance_group = ifelse(primary_substance_group %in% primary_substance_group_df$primary_substance_group, primary_substance_group_df$substance_code[match(primary_substance_group, primary_substance_group_df$primary_substance_group)], primary_substance_group))
# COUNTY ANALYSIS
admissions_by_county <- admissions_df %>%
group_by(county_of_program_location) %>%
select(county_of_program_location, admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_by_county %>%
count(county_of_program_location, wt = admissions) %>%
arrange(county_of_program_location, .locale = "en")
admissions_county_plot <- ggplot(admissions_by_county, aes(x = county_of_program_location, y = admissions)) + geom_bar(stat = "identity") + labs(x = "County", y = "Admissions", title = "Admissions By County") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# AGE GROUP ANALYSIS
admissions_by_age <- admissions_df %>%
group_by(age_group) %>%
select(age_group,admissions) %>%
arrange(age_group, .locale = "en")
admissions_by_age %>%
count(age_group) %>%
arrange(age_group, .locale = "en")
admissions_age_plot <- ggplot(admissions_by_age, aes(x = age_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Age Group", y = "Admssions", title = "Admissions By Age Group")
# PROGRAM CATEGORY ANALYSIS
admissions_by_program <- admissions_df %>%
group_by(program_category) %>%
select(program_category, admissions) %>%
arrange(program_category, .locale = "en")
admissions_by_program %>%
count(program_category, wt = admissions) %>%
arrange(program_category, .locale = "en")
admissions_program_plot <- ggplot(admissions_by_program, aes(x = program_category, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Program Category", y = "Admissions", title = "Admissions by Program")
# PRIMARY SUBSTANCE ANALYSIS
admissions_by_substance <- admissions_df %>%
group_by(primary_substance_group) %>%
select(primary_substance_group,admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_by_substance %>%
count(primary_substance_group, wt = admissions) %>%
arrange(primary_substance_group, .locale = "en")
admissions_substance_plot <- ggplot(admissions_by_substance, aes(x = primary_substance_group, y = admissions)) + geom_bar(stat = "identity") + labs(x = "Primary Substance", y = "Admssions", title = "Admissions By Substance")
admissions_age_plot
admissions_county_plot
admissions_program_plot
admissions_county_plot
