Mar2019 <- as.numeric(passenger_counts[20,2])
error <- abs(Mar2019-SMA)
error/Mar2019
# Simple moving average. Get data from 2016 to 2018
periods <- c(as.numeric(passenger_counts[17,2]),as.numeric(passenger_counts[18,2]),as.numeric(passenger_counts[19,2]))
SMA <- mean(last3, trim = 0)
print(SMA)
# Calculate error
Mar2019 <- as.numeric(passenger_counts[20,2])
error <- abs(Mar2019-SMA)
error/Mar2019 * 100
# Simple moving average. Get data from 2016 to 2018
periods <- c(as.numeric(passenger_counts[17,2]),as.numeric(passenger_counts[18,2]),as.numeric(passenger_counts[19,2]))
SMA <- mean(last3, trim = 0)
print(SMA)
# Calculate error
Mar2019 <- as.numeric(passenger_counts[20,2])
error <- abs(Mar2019-SMA)
percent_error <- error/Mar2019 * 100
print(percent_error)
periods
View(passenger_counts)
weights <- c(3,5,7)
product <- wights * periods
weights <- c(3,5,7)
product <- weights * periods
weights <- c(3,5,7)
product <- weights * periods
WMA <- sum(product)/sum(weights)
print(WMA)
# Wighted moving average. Set weights to be 3, 5, and 7 for the years 2016, 2017, and 2018
weights <- c(3,5,7)
product <- weights * periods
WMA <- sum(product)/sum(weights)
print(WMA)
error <- abs(Mar2019-WMA)
percent_error <- error/Mar2019 * 100
print(percent_error)
?filter
# Exponential Smoothing
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800)
View(df)
# Exponential Smoothing
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800)
df$Ft <- 0
df$E <- 0
# Exponential Smoothing
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800)
df$Ft <- 0
df$E <- 0
df$ft[1] <- df[1,2]
# Exponential Smoothing
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- df$Ft[i-1] + a*df$E[i-1]
df$E[i] <- df[i,2] - df$Ft[i]
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df <- as.numeric(df)
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- df$Ft[i-1] + a*df$E[i-1]
df$E[i] <- df[i,2] - df$Ft[i]
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- as.numeric(0)
df$E <- as.numeric(0)
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- df$Ft[i-1] + a*df$E[i-1]
df$E[i] <- df[i,2] - df$Ft[i]
}
type(df$activity_period)
class(df$activity_period)
class(df$Ft)
class(df$Ft[1])
df$Ft
?mutate
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- df %>%
mutate(Ft = 0) %>%
mutate(E = 0)
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- df$Ft[i-1] + a*df$E[i-1]
df$E[i] <- df[i,2] - df$Ft[i]
}
df$Ft[1]
df[3,1]
df[1,3]
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- df %>%
mutate(Ft = 0) %>%
mutate(E = 0)
df$Ft[1] <- df[1,2]
#for (i in 2:nrow(df)) {
#df$Ft[i] <- df$Ft[i-1] + a*df$E[i-1]
#df$E[i] <- df[i,2] - df$Ft[i]
#}
df[3,1]
dr[1,3]
df[1,3]
df[1,3[1]]
df[1,3[1,1]]
df[1,3[0]]
df[1,3[1]]
df[2,3[1]]
df[1,1]
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- rep(0:1)
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- rep(0:1, times=2)
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- rep(1:11, times=2)
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- rep(1:11, times=1)
#for (i in 2:nrow(df)) {
#df$Ft[i] <- df$Ft[i-1] + a*df$E[i-1]
#df$E[i] <- df[i,2] - df$Ft[i]
#}
df[3,1]
df[1,3]
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- rep(1:11, times=1)
df$E <- rep(1:11, times=1)
#for (i in 2:nrow(df)) {
#df$Ft[i] <- df$Ft[i-1] + a*df$E[i-1]
#df$E[i] <- df[i,2] - df$Ft[i]
#}
View(df)
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- rep(1:11, times=1)
df$E <- rep(1:11, times=1)
for (i in 2:nrow(df)) {
df$Ft[i] <- df$Ft[i-1] + a*df$E[i-1]
df$E[i] <- df[i,2] - df$Ft[i]
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- rep(1:11, times=1)
df$E <- rep(1:11, times=1)
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- df[i,2] - df$Ft[i]
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df$Ft <- rep(1:11, times=1)
df$E <- rep(1:11, times=1)
for (i in 2:nrow(df)) {
y <- i -1
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[y])
df$E[i] <- df[i,2] - df$Ft[i]
}
a
class(a)
class(df$E[1])
class(df)
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- as.data.frame(df)
df$Ft <- rep(1:11, times=1)
df$E <- rep(1:11, times=1)
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- df[i,2] - df$Ft[i]
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- as.data.frame(df)
df$Ft <- 0
df$E <- 0
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- df[i,2] - df$Ft[i]
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- as.data.frame(df)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- df[i,2] - df$Ft[i]
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- as.data.frame(df)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- df[i,2] - df$Ft[i]
}
df[2,2] - df$Ft[2]
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- as.data.frame(df)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- abs(df[i,2] - df$Ft[i])
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 202000)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- as.data.frame(df)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- abs(df[i,2] - df$Ft[i])
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 202000)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- as.data.frame(df)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- abs(df[i,2] - df$Ft[i])
}
df$E[12]
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 202000)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- as.data.frame(df)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- abs(df[i,2] - df$Ft[i])
}
df$E[12]/df$total_passengers[12]
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 202000)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
df <- as.data.frame(df)
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- abs(df[i,2] - df$Ft[i])
}
percent_error <- df$E[12]/df$total_passengers[12] * 100
print(percent_error)
df <- passenger_counts %>%
filter(activity_period > 200800) %>%
filter(activity_period < 201900)
# Simple Linear Regression from 2008 to 2018
df <- passenger_counts %>%
filter(activity_period > 200800) %>%
filter(activity_period < 201900)
model <- lm(df$activity_period ~ df$total_passengers)
print(model)
# Simple Linear Regression from 2008 to 2018
df <- passenger_counts %>%
filter(activity_period > 200800) %>%
filter(activity_period < 201900)
model <- lm(df$total_passengers ~ df$activity_period)
print(model)
# Simple Linear Regression from 2008 to 2018
df <- passenger_counts %>%
filter(activity_period > 200800) %>%
filter(activity_period < 201900)
model <- lm(df$total_passengers ~ df$activity_period)
print(model)
# y = -334959715 + 1682(activity_period)
forecast2019 <- -334959715 + (1682*201903)
# Simple Linear Regression from 2008 to 2018
df <- passenger_counts %>%
filter(activity_period > 200800) %>%
filter(activity_period < 201900)
model <- lm(df$total_passengers ~ df$activity_period)
print(model)
# y = -334959715 + 1682(activity_period)
forecast2019 <- -334959715 + (1682*201903)
forecst2020 <- -334959715 + (1682*202003)
# Simple Linear Regression from 2008 to 2018
df <- passenger_counts %>%
filter(activity_period > 200800) %>%
filter(activity_period < 201900)
model <- lm(df$total_passengers ~ df$activity_period)
print(model)
# y = -334959715 + 1682(activity_period)
forecast2019 <- -334959715 + (1682*201903)
forecst2020 <- -334959715 + (1682*202003)
print(forecast2019)
print(forecst2020)
abs(4641131-4599189)
41942/4599189
lm(df$total_passengers ~ df$activity_period)
model
print(model)
resid(model)
?resid
model$residuals
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
# convert from tibble to regular dataframe. Tibble is incompatable with analysis below because new columns are created with class list
df <- as.data.frame(df)
# Initialize forecast and error columns
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
# Loop through to build model
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- abs(df[i,2] - df$Ft[i])
}
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
# convert from tibble to regular dataframe. Tibble is incompatable with analysis below because new columns are created with class list
df <- as.data.frame(df)
# Initialize forecast and error columns
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
# Loop through to build model
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- abs(df[i,2] - df$Ft[i])
}
# Calculate MSE for exponential smoothing model
error_means <- mean(df$E)
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
# convert from tibble to regular dataframe. Tibble is incompatable with analysis below because new columns are created with class list
df <- as.data.frame(df)
# Initialize forecast and error columns
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
# Loop through to build model
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- abs(df[i,2] - df$Ft[i])
}
# Calculate MSE for exponential smoothing model
error_means <- mean(df$E)
MSE_1 <- (error_means)^2
# Exponential Smoothing with alpha = 0.7 and data starting from 2008 to 2018
a <- 0.7
df <- passenger_counts %>%
filter(activity_period > 200800 & activity_period < 201900)
df$activity_period <- as.numeric(df$activity_period)
df$total_passengers <- as.numeric(df$total_passengers)
# convert from tibble to regular dataframe. Tibble is incompatable with analysis below because new columns are created with class list
df <- as.data.frame(df)
# Initialize forecast and error columns
df$Ft <- 0
df$E <- 0
df$Ft[1] <- df[1,2]
# Loop through to build model
for (i in 2:nrow(df)) {
df$Ft[i] <- as.numeric(df$Ft[i-1]) + as.numeric(a*df$E[i-1])
df$E[i] <- abs(df[i,2] - df$Ft[i])
}
# Calculate MSE for exponential smoothing model
error_means <- mean(df$E)
MSE_1 <- (error_means)^2
# Simple Linear Regression from 2008 to 2018
df <- passenger_counts %>%
filter(activity_period > 200800) %>%
filter(activity_period < 201900)
model <- lm(df$total_passengers ~ df$activity_period)
# Calculate MSE for Simple Linear Regression model
MSE_2 <- mean((model$residuals)^2)
print(MSE_1)
print(MSE_2)
